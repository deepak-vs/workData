React Native------------------------------------------------------------------------------------------


1.INTRODUCTION
	-React vs React Native
	-Installation (Choclaty,node & java, android studio,emulator setup)
	-File structure
2.COMPONENTS
	-View,Text,Image,Button,ScrollView,Alert,TextInput,Flatlist,Touchables-(Opacity,highlight,pressable)
	KeyboardAvoidingView,ImageBackground,keyBoardAvoidingScrollView,SafeAreaView(avoids status bar area),


3.STYLES:----viewstyle,imagestyle,textstyle----styles in native(for ts--interface <styledInterface>)	



1.View ----------no scroll available
2.Text
3.Image-----<Image source={localimageImported} />   <Image source={{uri:"external url"}} style={{width="must" height="must"}}/>
4.ImageBackground----- <ImageBackground source={}>Content</ImageBackground>
5.ScrollView-----view+scrolliing ------can overlap status bar ---to avoid this wrap the 
							scrollView inside the View component with specific height or marginTop.
6.Button----
7.Pressable----it is a wrapper componeny to wrap a child component and make it a pressable so that we can use onPress event on that commponent.It can detect varius press interactions---onPressIn,onLongPress(500ms),onPressOut
8.Modal--overlays the screen to provide or prompt imp information.Default it is always visible.
	<Modal 
		visible={visibility} onRequestClose={()=setVisible(False)} animationType={} presentationStyle={for 	ios only}>Content</Modal>

	<Modal 
        visible={visibility} -------state
        transparent={true} ---------to keep background(true) else (False)
        animationType='fade' -------starting and ending animation of a modal
        onRequestClose={()=>{
            console.warn("Modal closing")
            setVisibility(false)
        }}   -------------------------works only with android back button
	onShow={()=>{
            console.warn("Modal opened!")
        }} ---------------------------works when modal is opened
        >
          <View style={styles.modalContainer}>
            <Text style={{fontSize:35}}>I am Modal</Text>
            <Button title="Close" onPress={()=>setVisibility(false)}/>
          </View>
        </Modal>

9.StatusBar:-to add,remove,modify the status bar 
	<StatusBar backgroundColor="crimson" barStyle={"light-content"} hidden/>
10.ActivityIndicator:-this component is used to show loading indicator in app
			{ <ActivityIndicator size={"large"} color="red" animating={true}/>}

11.Alerts:--It is similar to modals but provides better functionality and appearance.
	i).alert("Your data")  ------------------------simple alert with message
	ii).Alert.alert("Title","Data")  ------------Alert API
	iii).Alert.alert("title","Data",[{text:"ButtonText",onPress:()=>{button Event Handler}},{},{}]	
			-------Alert API with title,data,max three buttons.
12.Custom Components ------same as custom components of React.
13.Styling :- Styling is done using Javascript instead direct css.(camelCase Naming of Properties).
		Approaches:-- i). inline(style attribute  style={{width:"200",height:"200"}})   
			     ii).internal (stylesheet.create({}))   
			    iii).external (import styles from external module)  
			     iv).all style={[myStyle.text,myStyle2.inner,width:"200"]}------Array of styles
				Note:-last element(style) of an Array of styles will have preference.(overriding 				     of styles will take place)


14.List in React Native :- i). using ScrollView and array.map(),but it is not optimised as it render all the array 				  items at once.
			  ii). using Flatlist,This component renders only the visible items making it highly 				       optimised for long lists	
		












